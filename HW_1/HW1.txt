Problem 1:
a.)
BINARY		UNSIGN	SIGNED	1's COMP	2's COMP	BIAS
1100 1010	202		-74		53			54			75
0011 1001	57		57		57			57			-70
0110 1010	106		106		106			106			-21
1001 0000	144		-16		111			112			17

b.)
Property						UNSIGN	SIGNED	1's		2's		BIAS
Can represent positive number	T 		T 		T 		T 		T
Can represent negative nummber	F 		T 		T 		T 		T
Has more than one rep for 0		F 		T		T 		F  		F 
Use same addition process as 	T 		F 		F 		F  		T
unsigned

c.)	-32768
d.)	32767

Problem 2:

void swapArray(int* a1, int* a2, int size){
	int temp = 0;
	for(int i = 0; i < size; i++){
		temp = *(a1 + i);
		*(a1 + i) = *(a2 + i);
		*(a2 + i) = temp;
	}
}

Problem 3:
a.)
char* changeCase(char* str) {
	char* p;
	char* result;
	result = (char*) malloc( strlen(str) * sizeof(char));
	strcpy(str, p);
	int i = 0;
	for( p=result; *p!=’\0’; p++ ) {
		/* Fill-in ‘A’ = 65, ‘a’ = 97, ‘Z’ = 90, ‘z’ = 122 */
		if ((*p >= 65) && (*p <=90)){
			*(result+i) = (*p) + 32;
		}
		i++;
	}
	*(result+ strlen(str)) = '\0'
	return result;
}

b.)
void changeCase_by_ref( char** n ) { /* Fill-in */
	*n = *(changeCase(*n))
}

void changeCase_name(char* names[], int i) { /* No not touch */
	changeCase_by_ref( &(names[i]) );
}

Problem 4:
a.)
#define MAX_NAME_LEN 128
typedef struct {
	char name[MAX_NAME_LEN];
	unsigned long sid;
} Student;

/* return the name of student s */
const char* getName(const Student* s) {
	return s->name;
}

/*set the name of student s */
void setName(Student* s, const char* name) {
	/* fill me in */
	char* ptr;
	int i = 0;
	for(ptr = name; *ptr != '\0'; ptr++){
		s->name[i] = *(ptr);
		i++;
	}
	s->name[i] = '\0';
}

/*return the SID of student s */
unsigned long getStudentID(const Student* s) {
	/* fill me in */
	return s->sid;
}

/* set the SID of student s */
void setStudentID(Student* s, unsigned long sid) {
	/* fill me in */
	s->sid = sid;
}

b.) s was created as a local variable inside the function. So at the end of the function it will disappear. 
	The location the pointer will be pointing to will now be junk info.
Student* makeDefault(void) {
	Student s;
	setName(&s, "John");
	setStudentID(&s, 12345678);
	return &s;
}